//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TAL.Developer.Test.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TALTestEntities : DbContext
    {
        public TALTestEntities()
            : base("name=TALTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblMember> tblMembers { get; set; }
        public virtual DbSet<tblOccupationRating> tblOccupationRatings { get; set; }
        public virtual DbSet<tblOccupation> tblOccupations { get; set; }
    
        public virtual int spMembers_DeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMembers_DeleteById", idParameter);
        }
    
        public virtual int spMembers_DeleteTestData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMembers_DeleteTestData");
        }
    
        public virtual ObjectResult<spMembers_GetById_Result> spMembers_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMembers_GetById_Result>("spMembers_GetById", idParameter);
        }
    
        public virtual ObjectResult<spMembers_GetList_Result> spMembers_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMembers_GetList_Result>("spMembers_GetList");
        }
    
        public virtual ObjectResult<Nullable<decimal>> spMembers_Insert(string name, Nullable<System.DateTime> dOB, Nullable<int> occupationId, Nullable<decimal> sumInsured)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var sumInsuredParameter = sumInsured.HasValue ?
                new ObjectParameter("SumInsured", sumInsured) :
                new ObjectParameter("SumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spMembers_Insert", nameParameter, dOBParameter, occupationIdParameter, sumInsuredParameter);
        }
    
        public virtual int spMembers_UpdateById(Nullable<int> id, string name, Nullable<System.DateTime> dOB, Nullable<int> occupationId, Nullable<decimal> sumInsured)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var occupationIdParameter = occupationId.HasValue ?
                new ObjectParameter("OccupationId", occupationId) :
                new ObjectParameter("OccupationId", typeof(int));
    
            var sumInsuredParameter = sumInsured.HasValue ?
                new ObjectParameter("SumInsured", sumInsured) :
                new ObjectParameter("SumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMembers_UpdateById", idParameter, nameParameter, dOBParameter, occupationIdParameter, sumInsuredParameter);
        }
    
        public virtual int spOccupations_DeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupations_DeleteById", idParameter);
        }
    
        public virtual int spOccupations_DeleteTestData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupations_DeleteTestData");
        }
    
        public virtual ObjectResult<spOccupations_GetById_Result> spOccupations_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOccupations_GetById_Result>("spOccupations_GetById", idParameter);
        }
    
        public virtual ObjectResult<spOccupations_GetList_Result> spOccupations_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOccupations_GetList_Result>("spOccupations_GetList");
        }
    
        public virtual ObjectResult<Nullable<decimal>> spOccupations_Insert(string name, Nullable<int> occupationRatingId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var occupationRatingIdParameter = occupationRatingId.HasValue ?
                new ObjectParameter("OccupationRatingId", occupationRatingId) :
                new ObjectParameter("OccupationRatingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spOccupations_Insert", nameParameter, occupationRatingIdParameter);
        }
    
        public virtual int spOccupations_UpdateById(Nullable<int> id, string name, Nullable<int> occupationRatingId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var occupationRatingIdParameter = occupationRatingId.HasValue ?
                new ObjectParameter("OccupationRatingId", occupationRatingId) :
                new ObjectParameter("OccupationRatingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupations_UpdateById", idParameter, nameParameter, occupationRatingIdParameter);
        }
    
        public virtual int spOccupationRatings_DeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupationRatings_DeleteById", idParameter);
        }
    
        public virtual int spOccupationRatings_DeleteTestData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupationRatings_DeleteTestData");
        }
    
        public virtual ObjectResult<spOccupationRatings_GetById_Result> spOccupationRatings_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOccupationRatings_GetById_Result>("spOccupationRatings_GetById", idParameter);
        }
    
        public virtual ObjectResult<spOccupationRatings_GetList_Result> spOccupationRatings_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOccupationRatings_GetList_Result>("spOccupationRatings_GetList");
        }
    
        public virtual ObjectResult<Nullable<decimal>> spOccupationRatings_Insert(string name, Nullable<decimal> factor)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spOccupationRatings_Insert", nameParameter, factorParameter);
        }
    
        public virtual int spOccupationRatings_UpdateById(Nullable<int> id, string name, Nullable<decimal> factor)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOccupationRatings_UpdateById", idParameter, nameParameter, factorParameter);
        }
    }
}
